{"version":3,"file":"index.js","sources":["../../../../../src/components/graph/modules/link/index.ts"],"sourcesContent":["import { select, Selection } from 'd3-selection'\nimport { range } from 'd3-array'\nimport { Transition } from 'd3-transition'\nimport toPx from 'to-px'\n\n// Utils\nimport { throttle, getValue, getNumber, getBoolean } from 'utils/data'\nimport { smartTransition } from 'utils/d3'\nimport { getCSSVariableValueInPixels } from 'utils/misc'\nimport { estimateStringPixelLength } from 'utils/text'\n\n// Types\nimport { GraphInputLink, GraphInputNode } from 'types/graph'\n\n// Local Types\nimport { GraphCircleLabel, GraphLink, GraphLinkArrowStyle, GraphLinkStyle } from '../../types'\n\n// Config\nimport { GraphConfigInterface } from '../../config'\n\n// Helpers\nimport { getX, getY } from '../node/helper'\nimport {\n  getLinkShiftTransform,\n  getLinkStrokeWidth,\n  getLinkBandWidth,\n  getLinkColor,\n  getLinkLabelTextColor,\n  getLinkArrowStyle,\n  LINK_MARKER_WIDTH,\n} from './helper'\nimport { ZoomLevel } from '../zoom-levels'\n\n// Styles\nimport * as generalSelectors from '../../style'\nimport * as linkSelectors from './style'\n\n\nexport function createLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>\n): void {\n  selection.attr('opacity', 0)\n\n  selection.append('path')\n    .attr('class', linkSelectors.linkSupport)\n\n  selection.append('path')\n    .attr('class', linkSelectors.link)\n\n  selection.append('path')\n    .attr('class', linkSelectors.linkBand)\n\n  selection.append('use')\n    .attr('class', linkSelectors.linkArrow)\n\n  selection.append('g')\n    .attr('class', linkSelectors.flowGroup)\n    .selectAll(`.${linkSelectors.flowCircle}`)\n    .data(range(0, 6)).enter()\n    .append('circle')\n    .attr('class', linkSelectors.flowCircle)\n\n  const linkLabelGroup = selection.append('g')\n    .attr('class', linkSelectors.linkLabelGroup)\n\n  linkLabelGroup.append('rect')\n    .attr('class', linkSelectors.linkLabelBackground)\n\n  linkLabelGroup.append('text')\n    .attr('class', linkSelectors.linkLabelContent)\n}\n\nexport function updateSelectedLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number\n): void {\n  const isGreyedOut = (d: GraphLink<N, L>, i: number): boolean => getBoolean(d, config.linkDisabled, i) || d._state.greyout\n  selection\n    .classed(linkSelectors.greyedOutLink, (d, i) => isGreyedOut(d, i))\n\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const group = select(element)\n    group.select(`.${linkSelectors.link}`)\n    group.select(`.${linkSelectors.linkBand}`)\n    const linkSupport = group.select(`.${linkSelectors.linkSupport}`)\n\n    linkSupport\n      .style('stroke-opacity', (d._state.hovered || d._state.selected) ? 0.2 : 0)\n      .style('stroke-width',\n        d._state.selected\n          ? getLinkBandWidth(d, scale, config) + 5\n          : d._state.hovered ? getLinkBandWidth(d, scale, config) + 10 : null\n      )\n  })\n}\n\nexport function updateLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  duration: number,\n  scale = 1,\n  getLinkArrowDefId: (arrow: GraphLinkArrowStyle | undefined) => string\n): void {\n  const { linkFlowParticleSize, linkStyle, linkFlow, linkLabel, linkLabelShiftFromCenter } = config\n  if (!selection.size()) return\n\n  selection\n    .classed(\n      linkSelectors.linkDashed,\n      d => getValue<GraphLink<N, L>, GraphLinkStyle>(d, linkStyle, d._indexGlobal) === GraphLinkStyle.Dashed\n    )\n\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const linkGroup = select(element)\n    const link = linkGroup.select<SVGPathElement>(`.${linkSelectors.link}`)\n    const linkBand = linkGroup.select<SVGPathElement>(`.${linkSelectors.linkBand}`)\n    const linkSupport = linkGroup.select<SVGPathElement>(`.${linkSelectors.linkSupport}`)\n    const linkArrow = linkGroup.select<SVGUseElement>(`.${linkSelectors.linkArrow}`)\n    const flowGroup = linkGroup.select(`.${linkSelectors.flowGroup}`)\n    const linkColor = getLinkColor(d, config)\n    const linkShiftTransform = getLinkShiftTransform(d, config.linkNeighborSpacing)\n    const linkLabelDatum = getValue<GraphLink<N, L>, GraphCircleLabel>(d, linkLabel, d._indexGlobal)\n    const linkLabelText = linkLabelDatum ? linkLabelDatum.text?.toString() : undefined\n\n    const x1 = getX(d.source)\n    const y1 = getY(d.source)\n    const x2 = getX(d.target)\n    const y2 = getY(d.target)\n\n    const curvature = getNumber(d, config.linkCurvature, i) ?? 0\n    const cp1x = x1 + (x2 - x1) * 0.5 * curvature\n    const cp1y = y1 + (y2 - y1) * 0.0 * curvature\n    const cp2x = x1 + (x2 - x1) * 0.5 * curvature\n    const cp2y = y1 + (y2 - y1) * 1.0 * curvature\n\n    const pathData = `M${x1},${y1} C${cp1x},${cp1y} ${cp2x},${cp2y} ${x2},${y2}`\n    link\n      .attr('class', linkSelectors.link)\n      .style('stroke-width', getLinkStrokeWidth(d, scale, config))\n      .style('stroke', linkColor)\n      .attr('transform', linkShiftTransform)\n\n    smartTransition(link, duration)\n      .attr('d', pathData)\n\n    linkBand\n      .attr('class', linkSelectors.linkBand)\n      .attr('transform', linkShiftTransform)\n      .style('stroke-width', getLinkBandWidth(d, scale, config))\n      .style('stroke', linkColor)\n\n    smartTransition(linkBand, duration)\n      .attr('d', pathData)\n\n    linkSupport\n      .style('stroke', linkColor)\n      .attr('transform', linkShiftTransform)\n      .attr('d', pathData)\n\n    // Arrow\n    const linkArrowStyle = getLinkArrowStyle(d, config)\n    const linkPathElement = linkSupport.node()\n    const pathLength = linkPathElement.getTotalLength()\n    if (linkArrowStyle) {\n      const arrowPos = pathLength * (linkLabelText ? 0.65 : 0.5)\n      const p1 = linkPathElement.getPointAtLength(arrowPos)\n      const p2 = linkPathElement.getPointAtLength(arrowPos + 1) // A point very close to p1\n\n      // Calculate the angle for the arrowhead\n      const angle = Math.atan2(p2.y - p1.y, p2.x - p1.x) * (180 / Math.PI)\n      const arrowWasShownBefore = linkArrow.attr('href')\n      linkArrow\n        .attr('href', `#${getLinkArrowDefId(linkArrowStyle)}`)\n\n      smartTransition(linkArrow, arrowWasShownBefore ? duration : 0)\n        .attr('fill', linkColor)\n        .attr('transform', `translate(${p1.x}, ${p1.y}) rotate(${angle})`)\n    } else {\n      linkArrow.attr('href', null)\n    }\n\n    // Particle Flow\n    flowGroup\n      .attr('transform', linkShiftTransform)\n      .style('display', getBoolean(d, linkFlow, d._indexGlobal) ? null : 'none')\n      .style('opacity', 0)\n\n    flowGroup\n      .selectAll(`.${linkSelectors.flowCircle}`)\n      .attr('r', linkFlowParticleSize / scale)\n      .style('fill', linkColor)\n\n    smartTransition(flowGroup, duration)\n      .style('opacity', scale < ZoomLevel.Level2 ? 0 : 1)\n\n    // Labels\n    const linkLabelGroup = linkGroup.select<SVGGElement>(`.${linkSelectors.linkLabelGroup}`)\n\n    if (linkLabelText) {\n      const linkMarkerWidth = linkArrowStyle ? LINK_MARKER_WIDTH * 2 : 0\n      const linkLabelShift = getBoolean(d, linkLabelShiftFromCenter, d._indexGlobal) ? -linkMarkerWidth + 4 : 0\n      const linkLabelPos = linkPathElement.getPointAtLength(pathLength / 2 + linkLabelShift)\n      const linkLabelTranslate = `translate(${linkLabelPos.x}, ${linkLabelPos.y})`\n      const linkLabelBackground = linkLabelGroup.select<SVGRectElement>(`.${linkSelectors.linkLabelBackground}`)\n      const linkLabelContent = linkLabelGroup.select<SVGTextElement>(`.${linkSelectors.linkLabelContent}`)\n\n      // If the label was hidden or didn't have text before, we need to set the initial position\n      if (!linkLabelContent.text() || linkLabelContent.attr('hidden')) {\n        linkLabelGroup.attr('transform', linkLabelTranslate)\n      }\n\n      linkLabelGroup.attr('hidden', null)\n        .style('cursor', linkLabelDatum.cursor)\n\n      smartTransition(linkLabelGroup, duration)\n        .attr('transform', linkLabelTranslate)\n        .style('opacity', 1)\n\n      linkLabelContent\n        .text(linkLabelText)\n        .attr('dy', '0.1em')\n        .style('font-size', linkLabelDatum.fontSize)\n        .style('fill', linkLabelDatum.textColor ?? getLinkLabelTextColor(linkLabelDatum))\n\n      const shouldBeRenderedAsCircle = linkLabelText.length <= 2\n      const linkLabelPaddingVertical = 4\n      const linkLabelPaddingHorizontal = shouldBeRenderedAsCircle ? linkLabelPaddingVertical : 8\n      const linkLabelFontSize = toPx(linkLabelDatum.fontSize) ?? getCSSVariableValueInPixels('var(--vis-graph-link-label-font-size)', linkLabelContent.node())\n      const linkLabelWidthPx = estimateStringPixelLength(linkLabelText, linkLabelFontSize)\n      const linkLabelBackgroundBorderRadius = linkLabelDatum.radius ?? (shouldBeRenderedAsCircle ? linkLabelFontSize : 4)\n      const linkLabelBackgroundWidth = (shouldBeRenderedAsCircle ? linkLabelFontSize : linkLabelWidthPx)\n      linkLabelBackground\n        .attr('x', -linkLabelBackgroundWidth / 2 - linkLabelPaddingHorizontal)\n        .attr('y', -linkLabelFontSize / 2 - linkLabelPaddingVertical)\n        .attr('width', linkLabelBackgroundWidth + linkLabelPaddingHorizontal * 2)\n        .attr('height', linkLabelFontSize + linkLabelPaddingVertical * 2)\n        .attr('rx', linkLabelBackgroundBorderRadius)\n        .style('fill', linkLabelDatum.color)\n    } else {\n      linkLabelGroup.attr('hidden', true)\n    }\n  })\n\n  // Pointer Events\n  if (duration > 0) {\n    selection.attr('pointer-events', 'none')\n    const t = smartTransition(selection, duration) as Transition<SVGGElement, GraphLink<N, L>, SVGGElement, GraphLink<N, L>>\n    t\n      .attr('opacity', 1)\n      .on('end interrupt', (d, i, elements) => {\n        select(elements[i])\n          .attr('pointer-events', 'stroke')\n          .attr('opacity', 1)\n      })\n  } else {\n    selection.attr('opacity', 1)\n  }\n\n  updateSelectedLinks(selection, config, scale)\n}\n\nexport function removeLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  duration: number\n): void {\n  smartTransition(selection, duration / 2)\n    .attr('opacity', 0)\n    .remove()\n}\n\nexport function animateLinkFlow<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number\n): void {\n  const { linkFlow } = config\n  if (scale < ZoomLevel.Level2) return\n\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const linkGroup = select(element)\n    const flowGroup = linkGroup.select(`.${linkSelectors.flowGroup}`)\n\n    const linkPathElement = linkGroup.select<SVGPathElement>(`.${linkSelectors.linkSupport}`).node()\n    const pathLength = linkPathElement.getTotalLength()\n\n    if (!getBoolean(d, linkFlow, d._indexGlobal)) return\n    const t = d._state.flowAnimTime\n    const circles = flowGroup.selectAll(`.${linkSelectors.flowCircle}`)\n\n    circles\n      .attr('transform', index => {\n        const tt = (t + (+index) / (circles.size() - 1)) % 1\n        const p = linkPathElement.getPointAtLength(tt * pathLength)\n        return `translate(${p.x}, ${p.y})`\n      })\n  })\n}\n\nexport function zoomLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number\n): void {\n  const { linkFlowParticleSize } = config\n\n  selection.classed(generalSelectors.zoomOutLevel2, scale < ZoomLevel.Level2)\n  selection.selectAll(`.${linkSelectors.flowCircle}`)\n    .attr('r', linkFlowParticleSize / scale)\n\n  const linkElements = selection.selectAll<SVGGElement, GraphLink<N, L>>(`.${linkSelectors.link}`)\n  linkElements\n    .style('stroke-width', d => getLinkStrokeWidth(d, scale, config))\n\n  const linkBandElements = selection.selectAll<SVGGElement, GraphLink<N, L>>(`.${linkSelectors.linkBand}`)\n  linkBandElements\n    .style('stroke-width', d => getLinkBandWidth(d, scale, config))\n}\n\nexport const zoomLinksThrottled = throttle(zoomLinks, 500)\n"],"names":["linkSelectors.linkSupport","linkSelectors.link","linkSelectors.linkBand","linkSelectors.linkArrow","linkSelectors.flowGroup","linkSelectors.flowCircle","linkLabelGroup","linkSelectors.linkLabelGroup","linkSelectors.linkLabelBackground","linkSelectors.linkLabelContent","linkSelectors.greyedOutLink","linkSupport","linkSelectors.linkDashed","link","linkBand","linkArrow","flowGroup","linkLabelBackground","linkLabelContent","generalSelectors.zoomOutLevel2"],"mappings":"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"}