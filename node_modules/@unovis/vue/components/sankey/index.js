import { defineComponent as d, inject as y, computed as b, ref as g, onMounted as m, nextTick as F, onUnmounted as S, watch as u, openBlock as h, createElementBlock as v } from "vue";
import { Sankey as c } from "@unovis/ts";
import { useForwardProps as f, arePropsEqual as k } from "../../utils/props.js";
import { componentAccessorKey as x } from "../../utils/context.js";
const C = { "data-vis-component": "" }, L = c.selectors, H = /* @__PURE__ */ d({
  __name: "index",
  props: {
    id: { type: Function },
    heightNormalizationCoeff: {},
    exitTransitionType: {},
    enterTransitionType: {},
    highlightSubtreeOnHover: { type: Boolean },
    highlightDuration: {},
    highlightDelay: {},
    iterations: {},
    nodeSort: { type: [Function, null] },
    linkSort: { type: [Function, null] },
    nodeWidth: {},
    nodeAlign: {},
    nodeHorizontalSpacing: {},
    nodeMinHeight: {},
    nodeMaxHeight: {},
    nodePadding: {},
    showSingleNode: { type: Boolean },
    nodeCursor: { type: [Function, String, null] },
    nodeIcon: { type: [Function, String, null] },
    nodeColor: { type: [Function, String, Array, null] },
    nodeFixedValue: { type: [Function, Number, null] },
    nodeIconColor: { type: [Function, String, Array, null] },
    linkColor: { type: [Function, String, null] },
    linkValue: { type: [Function, Number, null] },
    linkCursor: { type: [Function, String, null] },
    label: { type: [Function, String, null] },
    subLabel: { type: [Function, String, null] },
    labelPosition: { type: [Function, null] },
    labelVerticalAlign: {},
    labelBackground: { type: Boolean },
    labelFit: {},
    labelMaxWidth: {},
    labelExpandTrimmedOnHover: { type: Boolean },
    labelTrimMode: {},
    labelFontSize: {},
    labelTextSeparator: {},
    labelForceWordBreak: { type: Boolean },
    labelColor: { type: [Function, String, Array, null] },
    labelCursor: { type: [Function, String, null] },
    labelVisibility: { type: Function },
    subLabelFontSize: {},
    subLabelColor: { type: [Function, String, Array, null] },
    subLabelPlacement: {},
    subLabelToLabelInlineWidthRatio: {},
    duration: {},
    events: {},
    attributes: {},
    data: {}
  },
  setup(p, { expose: s }) {
    const i = p, t = y(x), o = b(() => t.data.value ?? i.data), l = f(i), n = g();
    return m(() => {
      F(() => {
        var e;
        n.value = new c(l.value), (e = n.value) == null || e.setData(o.value), t.update(n.value);
      });
    }), S(() => {
      var e;
      (e = n.value) == null || e.destroy(), t.destroy();
    }), u(l, (e, a) => {
      var r;
      k(e, a) || (r = n.value) == null || r.setConfig(l.value);
    }), u(o, () => {
      var e;
      (e = n.value) == null || e.setData(o.value);
    }), s({
      component: n
    }), (e, a) => (h(), v("div", C));
  }
});
export {
  L as VisSankeySelectors,
  H as default
};
//# sourceMappingURL=index.js.map
