import { defineComponent as u, inject as m, ref as d, onMounted as l, nextTick as f, onUnmounted as v, watch as _, openBlock as x, createElementBlock as h } from "vue";
import { Annotations as r } from "@unovis/ts";
import { useForwardProps as k, arePropsEqual as w } from "../../utils/props.js";
import { annotationsAccessorKey as y } from "../../utils/context.js";
const A = { "data-vis-annotations": "" }, P = r.selectors, b = /* @__PURE__ */ u({
  __name: "index",
  props: {
    items: {},
    duration: {},
    events: {},
    attributes: {},
    data: {}
  },
  setup(c, { expose: i }) {
    const p = c, n = m(y), t = k(p), o = d();
    return l(() => {
      f(() => {
        o.value = new r(t.value), n.update(o.value);
      });
    }), v(() => {
      var e;
      (e = o.value) == null || e.destroy(), n.destroy();
    }), _(t, (e, s) => {
      var a;
      w(e, s) || (a = o.value) == null || a.setConfig(t.value);
    }), i({
      component: o
    }), (e, s) => (x(), h("div", A));
  }
});
export {
  P as VisAnnotationsSelectors,
  b as default
};
//# sourceMappingURL=index.js.map
