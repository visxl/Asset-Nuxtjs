import { defineComponent as d, inject as y, computed as m, ref as x, onMounted as k, nextTick as v, onUnmounted as F, watch as r, openBlock as T, createElementBlock as f } from "vue";
import { Axis as s } from "@unovis/ts";
import { useForwardProps as B, arePropsEqual as b } from "../../utils/props.js";
import { axisAccessorKey as g } from "../../utils/context.js";
const S = { "data-vis-axis": "" }, M = s.selectors, j = /* @__PURE__ */ d({
  __name: "index",
  props: {
    position: {},
    type: {},
    fullSize: { type: Boolean },
    label: {},
    labelFontSize: {},
    labelMargin: {},
    labelColor: {},
    gridLine: { type: Boolean },
    tickLine: { type: Boolean },
    domainLine: { type: Boolean },
    minMaxTicksOnly: { type: Boolean },
    tickFormat: { type: Function },
    tickValues: {},
    numTicks: {},
    tickTextFitMode: {},
    tickTextWidth: {},
    tickTextSeparator: {},
    tickTextForceWordBreak: { type: Boolean },
    tickTextTrimType: {},
    tickTextFontSize: {},
    tickTextAlign: {},
    tickTextColor: {},
    tickTextAngle: {},
    tickPadding: {},
    x: { type: [Function, Number, null] },
    y: { type: [Function, Number, null, Array] },
    id: { type: Function },
    color: { type: [Function, String, Array, null] },
    xScale: { type: [Object, Function] },
    yScale: { type: [Object, Function] },
    excludeFromDomainCalculation: { type: Boolean },
    duration: {},
    events: {},
    attributes: {},
    data: {}
  },
  setup(u, { expose: p }) {
    const o = u, n = y(g), a = m(() => n.data.value ?? o.data), i = B(o), t = x();
    return k(() => {
      v(() => {
        var e;
        t.value = new s(i.value), (e = t.value) == null || e.setData(a.value), n.update(t.value);
      });
    }), F(() => {
      var e;
      (e = t.value) == null || e.destroy(), n.destroy(o.type);
    }), r(i, (e, c) => {
      var l;
      b(e, c) || (l = t.value) == null || l.setConfig(i.value);
    }), r(a, () => {
      var e;
      (e = t.value) == null || e.setData(a.value);
    }), p({
      component: t
    }), (e, c) => (T(), f("div", S));
  }
});
export {
  M as VisAxisSelectors,
  j as default
};
//# sourceMappingURL=index.js.map
