import {
  __commonJS
} from "./chunk-HKJ2B2AA.js";

// node_modules/highcharts/modules/dotplot.js
var require_dotplot = __commonJS({
  "node_modules/highcharts/modules/dotplot.js"(exports, module) {
    !/**
    * Highcharts JS v11.4.7 (2024-08-14)
    *
    * Dot plot series type for Highcharts
    *
    * (c) 2010-2024 Torstein Honsi
    *
    * License: www.highcharts.com/license
    */
    function(t) {
      "object" == typeof module && module.exports ? (t.default = t, module.exports = t) : "function" == typeof define && define.amd ? define("highcharts/modules/dotplot", ["highcharts"], function(e) {
        return t(e), t.Highcharts = e, t;
      }) : t("undefined" != typeof Highcharts ? Highcharts : void 0);
    }(function(t) {
      "use strict";
      var e = t ? t._modules : {};
      function s(e2, s2, i, o) {
        e2.hasOwnProperty(s2) || (e2[s2] = o.apply(null, i), "function" == typeof CustomEvent && t.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", { detail: { path: s2, module: e2[s2] } })));
      }
      s(e, "Series/DotPlot/DotPlotSeriesDefaults.js", [], function() {
        return { itemPadding: 0.1, marker: { symbol: "circle", states: { hover: {}, select: {} } }, slotsPerBar: void 0 };
      }), s(e, "Series/DotPlot/DotPlotSeries.js", [e["Series/DotPlot/DotPlotSeriesDefaults.js"], e["Core/Series/SeriesRegistry.js"], e["Core/Utilities.js"]], function(t2, e2, s2) {
        let { column: i } = e2.seriesTypes, { extend: o, isNumber: r, merge: l, pick: n } = s2;
        class a extends i {
          drawPoints() {
            var _a2, _b;
            let t3 = this.options, e3 = this.chart.renderer, s3 = t3.marker, i2 = this.points.reduce((t4, e4) => t4 + Math.abs(e4.y || 0), 0), l2 = this.points.reduce((t4, e4) => {
              var _a3;
              return t4 + (((_a3 = e4.shapeArgs) == null ? void 0 : _a3.height) || 0);
            }, 0), a2 = t3.itemPadding || 0, d = ((_b = (_a2 = this.points[0]) == null ? void 0 : _a2.shapeArgs) == null ? void 0 : _b.width) || 0, h = t3.slotsPerBar, c = d;
            if (!r(h)) for (h = 1; h < i2 && !(i2 / h < l2 / c * 1.2); ) c = d / ++h;
            let p = l2 * h / i2;
            for (let t4 of this.points) {
              let i3 = t4.marker || {}, r2 = i3.symbol || s3.symbol, l3 = n(i3.radius, s3.radius), d2 = "rect" !== r2 ? p : c, u = t4.shapeArgs || {}, f = (u.x || 0) + ((u.width || 0) - h * d2) / 2, g = Math.abs(t4.y ?? 0), m = u.y || 0, y = u.height || 0, v, P = f, b = t4.negative ? m : m + y - p, A = 0;
              t4.graphics = v = t4.graphics || [];
              let S = t4.pointAttr ? t4.pointAttr[t4.selected ? "selected" : ""] || this.pointAttr[""] : this.pointAttribs(t4, t4.selected && "select");
              if (delete S.r, this.chart.styledMode && (delete S.stroke, delete S["stroke-width"]), "number" == typeof t4.y) {
                t4.graphic || (t4.graphic = e3.g("point").add(this.group));
                for (let s4 = 0; s4 < g; s4++) {
                  let i4 = { x: P + d2 * a2, y: b + p * a2, width: d2 * (1 - 2 * a2), height: p * (1 - 2 * a2), r: l3 }, n2 = v[s4];
                  n2 ? n2.animate(i4) : n2 = e3.symbol(r2).attr(o(i4, S)).add(t4.graphic), n2.isActive = true, v[s4] = n2, P += d2, ++A >= h && (A = 0, P = f, b = t4.negative ? b + p : b - p);
                }
              }
              let j = -1;
              for (let t5 of v) ++j, t5 && (t5.isActive ? t5.isActive = false : (t5.destroy(), v.splice(j, 1)));
            }
          }
        }
        return a.defaultOptions = l(i.defaultOptions, t2), o(a.prototype, { markerAttribs: void 0 }), e2.registerSeriesType("dotplot", a), a;
      }), s(e, "masters/modules/dotplot.src.js", [e["Core/Globals.js"]], function(t2) {
        return t2;
      });
    });
  }
});
export default require_dotplot();
//# sourceMappingURL=highcharts_modules_dotplot__js.js.map
