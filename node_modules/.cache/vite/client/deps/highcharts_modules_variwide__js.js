import {
  __commonJS
} from "./chunk-HKJ2B2AA.js";

// node_modules/highcharts/modules/variwide.js
var require_variwide = __commonJS({
  "node_modules/highcharts/modules/variwide.js"(exports, module) {
    !/**
    * Highcharts JS v11.4.7 (2024-08-14)
    *
    * Highcharts variwide module
    *
    * (c) 2010-2024 Torstein Honsi
    *
    * License: www.highcharts.com/license
    */
    function(t) {
      "object" == typeof module && module.exports ? (t.default = t, module.exports = t) : "function" == typeof define && define.amd ? define("highcharts/modules/variwide", ["highcharts"], function(i) {
        return t(i), t.Highcharts = i, t;
      }) : t("undefined" != typeof Highcharts ? Highcharts : void 0);
    }(function(t) {
      "use strict";
      var i = t ? t._modules : {};
      function s(i2, s2, e, r) {
        i2.hasOwnProperty(s2) || (i2[s2] = r.apply(null, e), "function" == typeof CustomEvent && t.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", { detail: { path: s2, module: i2[s2] } })));
      }
      s(i, "Series/Variwide/VariwideComposition.js", [i["Core/Globals.js"], i["Core/Utilities.js"]], function(t2, i2) {
        let { composed: s2 } = t2, { addEvent: e, pushUnique: r, wrap: o } = i2;
        function a(t3) {
          this.variwide && this.cross && this.cross.attr("stroke-width", t3.point && t3.point.crosshairWidth);
        }
        function n() {
          let t3 = this;
          this.variwide && this.chart.labelCollectors.push(function() {
            return t3.tickPositions.filter((i3) => !!t3.ticks[i3].label).map((i3, s3) => {
              let e2 = t3.ticks[i3].label;
              return e2.labelrank = t3.zData[s3], e2;
            });
          });
        }
        function h(t3) {
          let i3 = this.axis, s3 = i3.horiz ? "x" : "y";
          i3.variwide && (this[s3 + "Orig"] = t3.pos[s3], this.postTranslate(t3.pos, s3, this.pos));
        }
        function l(t3, i3, s3) {
          let e2 = this.axis, r2 = t3[i3] - e2.pos;
          e2.horiz || (r2 = e2.len - r2), r2 = e2.series[0].postTranslate(s3, r2), e2.horiz || (r2 = e2.len - r2), t3[i3] = e2.pos + r2;
        }
        function d(t3, i3, s3, e2, r2, o2, a2, n2) {
          let h2 = Array.prototype.slice.call(arguments, 1), l2 = r2 ? "x" : "y";
          this.axis.variwide && "number" == typeof this[l2 + "Orig"] && (h2[r2 ? 0 : 1] = this[l2 + "Orig"]);
          let d2 = t3.apply(this, h2);
          return this.axis.variwide && this.axis.categories && this.postTranslate(d2, l2, this.pos), d2;
        }
        return { compose: function(t3, i3) {
          if (r(s2, "Variwide")) {
            let s3 = i3.prototype;
            e(t3, "afterDrawCrosshair", a), e(t3, "afterRender", n), e(i3, "afterGetPosition", h), s3.postTranslate = l, o(s3, "getLabelPosition", d);
          }
        } };
      }), s(i, "Series/Variwide/VariwidePoint.js", [i["Core/Series/SeriesRegistry.js"], i["Core/Utilities.js"]], function(t2, i2) {
        let { column: { prototype: { pointClass: s2 } } } = t2.seriesTypes, { isNumber: e } = i2;
        return class extends s2 {
          isValid() {
            return e(this.y) && e(this.z);
          }
        };
      }), s(i, "Series/Variwide/VariwideSeriesDefaults.js", [], function() {
        return { pointPadding: 0, groupPadding: 0 };
      }), s(i, "Series/Variwide/VariwideSeries.js", [i["Core/Series/SeriesRegistry.js"], i["Series/Variwide/VariwideComposition.js"], i["Series/Variwide/VariwidePoint.js"], i["Series/Variwide/VariwideSeriesDefaults.js"], i["Core/Utilities.js"]], function(t2, i2, s2, e, r) {
        let { column: o } = t2.seriesTypes, { addEvent: a, crisp: n, extend: h, merge: l, pick: d } = r;
        class p extends o {
          processData(i3) {
            this.totalZ = 0, this.relZ = [], t2.seriesTypes.column.prototype.processData.call(this, i3), (this.xAxis.reversed ? this.zData.slice().reverse() : this.zData).forEach(function(t3, i4) {
              this.relZ[i4] = this.totalZ, this.totalZ += t3;
            }, this), this.xAxis.categories && (this.xAxis.variwide = true, this.xAxis.zData = this.zData);
          }
          postTranslate(t3, i3, s3) {
            let e2 = this.xAxis, r2 = this.relZ, o2 = e2.reversed ? r2.length - t3 : t3, a2 = e2.reversed ? -1 : 1, n2 = e2.toPixels(e2.reversed ? (e2.dataMax || 0) + e2.pointRange : e2.dataMin || 0), h2 = e2.toPixels(e2.reversed ? e2.dataMin || 0 : (e2.dataMax || 0) + e2.pointRange), l2 = Math.abs(h2 - n2), p2 = this.totalZ, c = this.chart.inverted ? h2 - (this.chart.plotTop - a2 * e2.minPixelPadding) : n2 - this.chart.plotLeft - a2 * e2.minPixelPadding, u = o2 / r2.length * l2, f = (o2 + a2) / r2.length * l2, x = d(r2[o2], p2) / p2 * l2, w = d(r2[o2 + a2], p2) / p2 * l2;
            return s3 && (s3.crosshairWidth = w - x), c + x + (i3 - (c + u)) * (w - x) / (f - u);
          }
          translate() {
            this.crispOption = this.options.crisp, this.options.crisp = false, super.translate(), this.options.crisp = this.crispOption;
          }
          correctStackLabels() {
            let t3, i3, s3, e2;
            let r2 = this.options, o2 = this.yAxis;
            for (let a2 of this.points) e2 = a2.x, i3 = a2.shapeArgs.width, (s3 = o2.stacking.stacks[(this.negStacks && a2.y < (r2.startFromThreshold ? 0 : r2.threshold) ? "-" : "") + this.stackKey]) && (t3 = s3[e2]) && !a2.isNull && t3.setOffset(-(i3 / 2) || 0, i3 || 0, void 0, void 0, a2.plotX, this.xAxis);
          }
        }
        return p.compose = i2.compose, p.defaultOptions = l(o.defaultOptions, e), a(p, "afterColumnTranslate", function() {
          let t3 = this.xAxis, i3 = this.chart.inverted, s3 = -1;
          for (let e2 of this.points) {
            let r2, o2;
            ++s3;
            let a2 = e2.shapeArgs || {}, { x: h2 = 0, width: l2 = 0 } = a2, { plotX: d2 = 0, tooltipPos: p2, z: c = 0 } = e2;
            t3.variwide ? (r2 = this.postTranslate(s3, h2, e2), o2 = this.postTranslate(s3, h2 + l2)) : (r2 = d2, o2 = t3.translate(e2.x + c, false, false, false, true)), this.crispOption && (r2 = n(r2, this.borderWidth), o2 = n(o2, this.borderWidth)), a2.x = r2, a2.width = Math.max(o2 - r2, 1), e2.plotX = (r2 + o2) / 2, p2 && (i3 ? p2[1] = t3.len - a2.x - a2.width / 2 : p2[0] = a2.x + a2.width / 2);
          }
          this.options.stacking && this.correctStackLabels();
        }, { order: 2 }), h(p.prototype, { irregularWidths: true, pointArrayMap: ["y", "z"], parallelArrays: ["x", "y", "z"], pointClass: s2 }), t2.registerSeriesType("variwide", p), p;
      }), s(i, "masters/modules/variwide.src.js", [i["Core/Globals.js"], i["Series/Variwide/VariwideSeries.js"]], function(t2, i2) {
        return i2.compose(t2.Axis, t2.Tick), t2;
      });
    });
  }
});
export default require_variwide();
//# sourceMappingURL=highcharts_modules_variwide__js.js.map
