import {
  __commonJS
} from "./chunk-HKJ2B2AA.js";

// node_modules/highcharts/modules/vector.js
var require_vector = __commonJS({
  "node_modules/highcharts/modules/vector.js"(exports, module) {
    !/**
    * Highcharts JS v11.4.7 (2024-08-14)
    *
    * Vector plot series module
    *
    * (c) 2010-2024 Torstein Honsi
    *
    * License: www.highcharts.com/license
    */
    function(t) {
      "object" == typeof module && module.exports ? (t.default = t, module.exports = t) : "function" == typeof define && define.amd ? define("highcharts/modules/vector", ["highcharts"], function(e) {
        return t(e), t.Highcharts = e, t;
      }) : t("undefined" != typeof Highcharts ? Highcharts : void 0);
    }(function(t) {
      "use strict";
      var e = t ? t._modules : {};
      function i(e2, i2, r, o) {
        e2.hasOwnProperty(i2) || (e2[i2] = o.apply(null, r), "function" == typeof CustomEvent && t.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", { detail: { path: i2, module: e2[i2] } })));
      }
      i(e, "Series/Vector/VectorSeriesDefaults.js", [], function() {
        return { lineWidth: 2, marker: void 0, rotationOrigin: "center", states: { hover: { lineWidthPlus: 1 } }, tooltip: { pointFormat: "<b>[{point.x}, {point.y}]</b><br/>Length: <b>{point.length}</b><br/>Direction: <b>{point.direction}Â°</b><br/>" }, vectorLength: 20 };
      }), i(e, "Series/Vector/VectorSeries.js", [e["Core/Animation/AnimationUtilities.js"], e["Core/Globals.js"], e["Core/Series/SeriesRegistry.js"], e["Core/Utilities.js"], e["Series/Vector/VectorSeriesDefaults.js"]], function(t2, e2, i2, r, o) {
        let { animObject: s } = t2, { series: n, seriesTypes: { scatter: a } } = i2, { arrayMax: h, extend: l, merge: c, pick: p } = r;
        class d extends a {
          animate(t3) {
            t3 ? this.markerGroup.attr({ opacity: 0.01 }) : this.markerGroup.animate({ opacity: 1 }, s(this.options.animation));
          }
          arrow(t3) {
            let e3 = t3.length / this.lengthMax * this.options.vectorLength / 20, i3 = { start: 10 * e3, center: 0, end: -10 * e3 }[this.options.rotationOrigin] || 0;
            return [["M", 0, 7 * e3 + i3], ["L", -1.5 * e3, 7 * e3 + i3], ["L", 0, 10 * e3 + i3], ["L", 1.5 * e3, 7 * e3 + i3], ["L", 0, 7 * e3 + i3], ["L", 0, -10 * e3 + i3]];
          }
          drawPoints() {
            let t3 = this.chart;
            for (let e3 of this.points) {
              let i3 = e3.plotX, r2 = e3.plotY;
              false === this.options.clip || t3.isInsidePlot(i3, r2, { inverted: t3.inverted }) ? (e3.graphic || (e3.graphic = this.chart.renderer.path().add(this.markerGroup).addClass("highcharts-point highcharts-color-" + p(e3.colorIndex, e3.series.colorIndex))), e3.graphic.attr({ d: this.arrow(e3), translateX: i3, translateY: r2, rotation: e3.direction }), this.chart.styledMode || e3.graphic.attr(this.pointAttribs(e3))) : e3.graphic && (e3.graphic = e3.graphic.destroy());
            }
          }
          pointAttribs(t3, e3) {
            let i3 = this.options, r2 = (t3 == null ? void 0 : t3.color) || this.color, o2 = this.options.lineWidth;
            return e3 && (r2 = i3.states[e3].color || r2, o2 = (i3.states[e3].lineWidth || o2) + (i3.states[e3].lineWidthPlus || 0)), { stroke: r2, "stroke-width": o2 };
          }
          translate() {
            n.prototype.translate.call(this), this.lengthMax = h(this.lengthData);
          }
        }
        return d.defaultOptions = c(a.defaultOptions, o), l(d.prototype, { drawGraph: e2.noop, getSymbol: e2.noop, markerAttribs: e2.noop, parallelArrays: ["x", "y", "length", "direction"], pointArrayMap: ["y", "length", "direction"] }), i2.registerSeriesType("vector", d), d;
      }), i(e, "masters/modules/vector.src.js", [e["Core/Globals.js"]], function(t2) {
        return t2;
      });
    });
  }
});
export default require_vector();
//# sourceMappingURL=highcharts_modules_vector__js.js.map
