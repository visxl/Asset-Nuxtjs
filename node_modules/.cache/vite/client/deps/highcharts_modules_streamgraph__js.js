import {
  __commonJS
} from "./chunk-HKJ2B2AA.js";

// node_modules/highcharts/modules/streamgraph.js
var require_streamgraph = __commonJS({
  "node_modules/highcharts/modules/streamgraph.js"(exports, module) {
    !/**
    * Highcharts JS v11.4.7 (2024-08-14)
    *
    * Streamgraph module
    *
    * (c) 2010-2024 Torstein Honsi
    *
    * License: www.highcharts.com/license
    */
    function(e) {
      "object" == typeof module && module.exports ? (e.default = e, module.exports = e) : "function" == typeof define && define.amd ? define("highcharts/modules/streamgraph", ["highcharts"], function(t) {
        return e(t), e.Highcharts = t, e;
      }) : e("undefined" != typeof Highcharts ? Highcharts : void 0);
    }(function(e) {
      "use strict";
      var t = e ? e._modules : {};
      function r(t2, r2, s, a) {
        t2.hasOwnProperty(r2) || (t2[r2] = a.apply(null, s), "function" == typeof CustomEvent && e.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", { detail: { path: r2, module: t2[r2] } })));
      }
      r(t, "Series/Streamgraph/StreamgraphSeriesDefaults.js", [], function() {
        return { fillOpacity: 1, lineWidth: 0, marker: { enabled: false }, stacking: "stream" };
      }), r(t, "Series/Streamgraph/StreamgraphSeries.js", [t["Core/Series/SeriesRegistry.js"], t["Series/Streamgraph/StreamgraphSeriesDefaults.js"], t["Core/Utilities.js"]], function(e2, t2, r2) {
        let { areaspline: s } = e2.seriesTypes, { merge: a, extend: i } = r2;
        class n extends s {
          streamStacker(e3, t3, r3) {
            e3[0] -= t3.total / 2, e3[1] -= t3.total / 2, this.stackedYData[r3] = e3;
          }
        }
        return n.defaultOptions = a(s.defaultOptions, t2), i(n.prototype, { negStacks: false }), e2.registerSeriesType("streamgraph", n), n;
      }), r(t, "masters/modules/streamgraph.src.js", [t["Core/Globals.js"]], function(e2) {
        return e2;
      });
    });
  }
});
export default require_streamgraph();
//# sourceMappingURL=highcharts_modules_streamgraph__js.js.map
