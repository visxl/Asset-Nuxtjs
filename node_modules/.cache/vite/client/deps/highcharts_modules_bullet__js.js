import {
  __commonJS
} from "./chunk-HKJ2B2AA.js";

// node_modules/highcharts/modules/bullet.js
var require_bullet = __commonJS({
  "node_modules/highcharts/modules/bullet.js"(exports, module) {
    !/**
    * Highcharts JS v11.4.7 (2024-08-14)
    *
    * Bullet graph series type for Highcharts
    *
    * (c) 2010-2024 Kacper Madej
    *
    * License: www.highcharts.com/license
    */
    function(t) {
      "object" == typeof module && module.exports ? (t.default = t, module.exports = t) : "function" == typeof define && define.amd ? define("highcharts/modules/bullet", ["highcharts"], function(e) {
        return t(e), t.Highcharts = e, t;
      }) : t("undefined" != typeof Highcharts ? Highcharts : void 0);
    }(function(t) {
      "use strict";
      var e = t ? t._modules : {};
      function r(e2, r2, i, s) {
        e2.hasOwnProperty(r2) || (e2[r2] = s.apply(null, i), "function" == typeof CustomEvent && t.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", { detail: { path: r2, module: e2[r2] } })));
      }
      r(e, "Series/Bullet/BulletPoint.js", [e["Series/Column/ColumnSeries.js"]], function(t2) {
        class e2 extends t2.prototype.pointClass {
          destroy() {
            this.targetGraphic && (this.targetGraphic = this.targetGraphic.destroy()), super.destroy.apply(this, arguments);
          }
        }
        return e2;
      }), r(e, "Series/Bullet/BulletSeriesDefaults.js", [], function() {
        return { targetOptions: { width: "140%", height: 3, borderWidth: 0, borderRadius: 0 }, tooltip: { pointFormat: '<span style="color:{series.color}">‚óè</span> {series.name}: <b>{point.y}</b>. Target: <b>{point.target}</b><br/>' } };
      }), r(e, "Series/Bullet/BulletSeries.js", [e["Series/Bullet/BulletPoint.js"], e["Series/Bullet/BulletSeriesDefaults.js"], e["Series/Column/ColumnSeries.js"], e["Core/Series/SeriesRegistry.js"], e["Core/Utilities.js"]], function(t2, e2, r2, i, s) {
        let { extend: o, isNumber: a, merge: l, pick: n, relativeLength: d } = s;
        class h extends r2 {
          drawPoints() {
            let t3 = this.chart, e3 = this.options, r3 = e3.animationLimit || 250;
            for (let i2 of (super.drawPoints.apply(this, arguments), this.points)) {
              let s2 = i2.options, o2 = i2.target, h2 = i2.y, p, u = i2.targetGraphic, c, g, m, f;
              if (a(o2) && null !== o2) {
                g = (m = l(e3.targetOptions, s2.targetOptions)).height;
                let y = i2.shapeArgs;
                i2.dlBox && y && !a(y.width) && (y = i2.dlBox), c = d(m.width, y.width), f = this.yAxis.translate(o2, false, true, false, true) - m.height / 2 - 0.5, p = this.crispCol.apply({ chart: t3, borderWidth: m.borderWidth, options: { crisp: e3.crisp } }, [y.x + y.width / 2 - c / 2, f, c, g]), u ? (u[t3.pointCount < r3 ? "animate" : "attr"](p), a(h2) && null !== h2 ? u.element.point = i2 : u.element.point = void 0) : i2.targetGraphic = u = t3.renderer.rect().attr(p).add(this.group), t3.styledMode || u.attr({ fill: n(m.color, s2.color, this.zones.length && (i2.getZone.call({ series: this, x: i2.x, y: o2, options: {} }).color || this.color) || void 0, i2.color, this.color), stroke: n(m.borderColor, i2.borderColor, this.options.borderColor), "stroke-width": m.borderWidth, r: m.borderRadius }), a(h2) && null !== h2 && (u.element.point = i2), u.addClass(i2.getClassName() + " highcharts-bullet-target", true);
              } else u && (i2.targetGraphic = u.destroy());
            }
          }
          getExtremes(t3) {
            let e3 = super.getExtremes.call(this, t3), r3 = this.targetData;
            if (r3 && r3.length) {
              let t4 = super.getExtremes.call(this, r3);
              a(t4.dataMin) && (e3.dataMin = Math.min(n(e3.dataMin, 1 / 0), t4.dataMin)), a(t4.dataMax) && (e3.dataMax = Math.max(n(e3.dataMax, -1 / 0), t4.dataMax));
            }
            return e3;
          }
        }
        return h.defaultOptions = l(r2.defaultOptions, e2), o(h.prototype, { parallelArrays: ["x", "y", "target"], pointArrayMap: ["y", "target"] }), h.prototype.pointClass = t2, i.registerSeriesType("bullet", h), h;
      }), r(e, "masters/modules/bullet.src.js", [e["Core/Globals.js"]], function(t2) {
        return t2;
      });
    });
  }
});
export default require_bullet();
//# sourceMappingURL=highcharts_modules_bullet__js.js.map
