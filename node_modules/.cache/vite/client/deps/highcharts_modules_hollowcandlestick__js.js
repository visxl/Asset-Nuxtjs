import {
  __commonJS
} from "./chunk-HKJ2B2AA.js";

// node_modules/highcharts/modules/hollowcandlestick.js
var require_hollowcandlestick = __commonJS({
  "node_modules/highcharts/modules/hollowcandlestick.js"(exports, module) {
    !/**
    * Highstock JS v11.4.7 (2024-08-14)
    *
    * Hollow Candlestick series type for Highcharts Stock
    *
    * (c) 2010-2024 Karol Kolodziej
    *
    * License: www.highcharts.com/license
    */
    function(t) {
      "object" == typeof module && module.exports ? (t.default = t, module.exports = t) : "function" == typeof define && define.amd ? define("highcharts/modules/hollowcandlestick", ["highcharts", "highcharts/modules/stock"], function(e) {
        return t(e), t.Highcharts = e, t;
      }) : t("undefined" != typeof Highcharts ? Highcharts : void 0);
    }(function(t) {
      "use strict";
      var e = t ? t._modules : {};
      function i(e2, i2, s, o) {
        e2.hasOwnProperty(i2) || (e2[i2] = o.apply(null, s), "function" == typeof CustomEvent && t.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", { detail: { path: i2, module: e2[i2] } })));
      }
      i(e, "Series/HollowCandlestick/HollowCandlestickPoint.js", [e["Core/Series/SeriesRegistry.js"]], function(t2) {
        let { seriesTypes: { candlestick: e2 } } = t2;
        class i2 extends e2.prototype.pointClass {
          getClassName() {
            let t3 = super.getClassName.apply(this), e3 = this.index, i3 = this.series.hollowCandlestickData[e3];
            return i3.isBullish || "up" !== i3.trendDirection || (t3 += "-bearish-up"), t3;
          }
        }
        return i2;
      }), i(e, "Series/HollowCandlestick/HollowCandlestickSeries.js", [e["Series/HollowCandlestick/HollowCandlestickPoint.js"], e["Core/Series/SeriesRegistry.js"], e["Core/Utilities.js"], e["Core/Axis/Axis.js"]], function(t2, e2, i2, s) {
        let { seriesTypes: { candlestick: o } } = e2, { addEvent: l, merge: n } = i2;
        class r extends o {
          constructor() {
            super(...arguments), this.hollowCandlestickData = [];
          }
          getPriceMovement() {
            let t3 = this.allGroupedData || this.yData, e3 = this.hollowCandlestickData;
            e3.length = 0, e3.push({ isBullish: true, trendDirection: "up" });
            for (let i3 = 1; i3 < t3.length; i3++) {
              let s2 = t3[i3], o2 = t3[i3 - 1];
              e3.push(this.isBullish(s2, o2));
            }
          }
          getLineColor(t3) {
            return "up" === t3 ? this.options.upColor || "#06b535" : this.options.color || "#f21313";
          }
          getPointFill(t3) {
            return t3.isBullish ? "transparent" : "up" === t3.trendDirection ? this.options.upColor || "#06b535" : this.options.color || "#f21313";
          }
          init() {
            super.init.apply(this, arguments), this.hollowCandlestickData = [];
          }
          isBullish(t3, e3) {
            return { isBullish: t3[0] <= t3[3], trendDirection: t3[3] < e3[3] ? "down" : "up" };
          }
          pointAttribs(t3, e3) {
            let i3;
            let s2 = super.pointAttribs.call(this, t3, e3), o2 = t3.index, l2 = this.hollowCandlestickData[o2];
            return s2.fill = this.getPointFill(l2) || s2.fill, s2.stroke = this.getLineColor(l2.trendDirection) || s2.stroke, e3 && (i3 = this.options.states[e3], s2.fill = i3.color || s2.fill, s2.stroke = i3.lineColor || s2.stroke, s2["stroke-width"] = i3.lineWidth || s2["stroke-width"]), s2;
          }
        }
        return r.defaultOptions = n(o.defaultOptions, { color: "#f21313", dataGrouping: { groupAll: true, groupPixelWidth: 10 }, lineColor: "#f21313", upColor: "#06b535", upLineColor: "#06b535" }), l(r, "updatedData", function() {
          this.hollowCandlestickData.length && (this.hollowCandlestickData.length = 0);
        }), l(s, "postProcessData", function() {
          this.series.forEach(function(t3) {
            t3.is("hollowcandlestick") && t3.getPriceMovement();
          });
        }), r.prototype.pointClass = t2, e2.registerSeriesType("hollowcandlestick", r), r;
      }), i(e, "masters/modules/hollowcandlestick.src.js", [e["Core/Globals.js"]], function(t2) {
        return t2;
      });
    });
  }
});
export default require_hollowcandlestick();
//# sourceMappingURL=highcharts_modules_hollowcandlestick__js.js.map
