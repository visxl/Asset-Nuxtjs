import {
  __commonJS
} from "./chunk-HKJ2B2AA.js";

// node_modules/highcharts/modules/series-on-point.js
var require_series_on_point = __commonJS({
  "node_modules/highcharts/modules/series-on-point.js"(exports, module) {
    !/**
    * Highcharts JS v11.4.7 (2024-08-14)
    *
    * Series on point module
    *
    * (c) 2010-2024 Highsoft AS
    * Author: Rafal Sebestjanski and Piotr Madej
    *
    * License: www.highcharts.com/license
    */
    function(t) {
      "object" == typeof module && module.exports ? (t.default = t, module.exports = t) : "function" == typeof define && define.amd ? define("highcharts/modules/series-on-point", ["highcharts"], function(e) {
        return t(e), t.Highcharts = e, t;
      }) : t("undefined" != typeof Highcharts ? Highcharts : void 0);
    }(function(t) {
      "use strict";
      var e = t ? t._modules : {};
      function i(e2, i2, o, s) {
        e2.hasOwnProperty(i2) || (e2[i2] = s.apply(null, o), "function" == typeof CustomEvent && t.win.dispatchEvent(new CustomEvent("HighchartsModuleLoaded", { detail: { path: i2, module: e2[i2] } })));
      }
      i(e, "Series/SeriesOnPointComposition.js", [e["Core/Globals.js"], e["Core/Series/Point.js"], e["Core/Series/Series.js"], e["Core/Series/SeriesRegistry.js"], e["Core/Renderer/SVG/SVGRenderer.js"], e["Core/Utilities.js"]], function(t2, e2, i2, o, s, r) {
        var n;
        let { composed: h } = t2, { bubble: a } = o.seriesTypes, { addEvent: p, defined: d, find: l, isNumber: c, pushUnique: f } = r;
        return function(t3) {
          t3.compose = function(t4, e3) {
            if (f(h, "SeriesOnPoint")) {
              let { chartGetZData: o2, seriesAfterInit: s2, seriesAfterRender: r2, seriesGetCenter: n2, seriesShowOrHide: h2, seriesTranslate: a2 } = i3.prototype;
              t4.types.pie.prototype.onPointSupported = true, p(t4, "afterInit", s2), p(t4, "afterRender", r2), p(t4, "afterGetCenter", n2), p(t4, "hide", h2), p(t4, "show", h2), p(t4, "translate", a2), p(e3, "beforeRender", o2), p(e3, "beforeRedraw", o2);
            }
            return t4;
          };
          class i3 {
            constructor(t4) {
              this.getRadii = a.prototype.getRadii, this.getRadius = a.prototype.getRadius, this.getPxExtremes = a.prototype.getPxExtremes, this.getZExtremes = a.prototype.getZExtremes, this.chart = t4.chart, this.series = t4, this.options = t4.options.onPoint;
            }
            drawConnector() {
              this.connector || (this.connector = this.series.chart.renderer.path().addClass("highcharts-connector-seriesonpoint").attr({ zIndex: -1 }).add(this.series.markerGroup));
              let t4 = this.getConnectorAttributes();
              t4 && this.connector.animate(t4);
            }
            getConnectorAttributes() {
              let t4 = this.series.chart, i4 = this.options;
              if (!i4) return;
              let o2 = i4.connectorOptions || {}, r2 = i4.position, n2 = t4.get(i4.id);
              if (!(n2 instanceof e2) || !r2 || !d(n2.plotX) || !d(n2.plotY)) return;
              let h2 = d(r2.x) ? r2.x : n2.plotX, a2 = d(r2.y) ? r2.y : n2.plotY, p2 = h2 + (r2.offsetX || 0), l2 = a2 + (r2.offsetY || 0), c2 = o2.width || 1, f2 = o2.stroke || this.series.color, u = o2.dashstyle, y = { d: s.prototype.crispLine([["M", h2, a2], ["L", p2, l2]], c2), "stroke-width": c2 };
              return t4.styledMode || (y.stroke = f2, y.dashstyle = u), y;
            }
            seriesAfterInit() {
              this.onPointSupported && this.options.onPoint && (this.bubblePadding = true, this.useMapGeometry = true, this.onPoint = new i3(this));
            }
            seriesAfterRender() {
              delete this.chart.bubbleZExtremes, this.onPoint && this.onPoint.drawConnector();
            }
            seriesGetCenter(t4) {
              let i4 = this.options.onPoint, o2 = t4.positions;
              if (i4) {
                let t5 = this.chart.get(i4.id);
                t5 instanceof e2 && d(t5.plotX) && d(t5.plotY) && (o2[0] = t5.plotX, o2[1] = t5.plotY);
                let s3 = i4.position;
                s3 && (d(s3.x) && (o2[0] = s3.x), d(s3.y) && (o2[1] = s3.y), s3.offsetX && (o2[0] += s3.offsetX), s3.offsetY && (o2[1] += s3.offsetY));
              }
              let s2 = this.radii && this.radii[this.index];
              c(s2) && (o2[2] = 2 * s2), t4.positions = o2;
            }
            seriesShowOrHide() {
              var _a;
              let t4 = this.chart.series;
              (_a = this.points) == null ? void 0 : _a.forEach((e3) => {
                let i4 = l(t4, (t5) => {
                  let i5 = ((t5.onPoint || {}).options || {}).id;
                  return !!i5 && i5 === e3.id;
                });
                i4 && i4.setVisible(!i4.visible, false);
              });
            }
            seriesTranslate() {
              this.onPoint && (this.onPoint.getRadii(), this.radii = this.onPoint.radii);
            }
            chartGetZData() {
              let t4 = [];
              this.series.forEach((e3) => {
                let i4 = e3.options.onPoint;
                t4.push(i4 && i4.z ? i4.z : null);
              }), this.series.forEach((e3) => {
                e3.onPoint && (e3.onPoint.zData = e3.zData = t4);
              });
            }
          }
          t3.Additions = i3;
        }(n || (n = {})), n;
      }), i(e, "masters/modules/series-on-point.src.js", [e["Core/Globals.js"], e["Series/SeriesOnPointComposition.js"]], function(t2, e2) {
        return e2.compose(t2.Series, t2.Chart), t2;
      });
    });
  }
});
export default require_series_on_point();
//# sourceMappingURL=highcharts_modules_series-on-point__js.js.map
